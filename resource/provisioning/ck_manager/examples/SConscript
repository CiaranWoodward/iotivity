#******************************************************************
#
# Copyright 2015 Samsung Electronics All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

##
# Examples build script
##
Import('env')

cert_examples_env = env.Clone()

######################################################################
# Build flags
######################################################################
cert_examples_env.AppendUnique(CPPPATH = [
		'../../../include/',
		'../../../csdk/security/provisioning/ck_manager/include',
		'../../../csdk/connectivity/inc/pkix',
		'../../../../extlibs/asn1cert',
		'../../../../extlibs/tinydtls/ecc/',
		'../../../../extlibs/tinydtls/sha2/'
		])

target_os = env.get('TARGET_OS')
if target_os not in ['windows', 'winrt']:
	cert_examples_env.AppendUnique(CXXFLAGS = ['-std=c++0x', '-Wall', '-pthread'])

	# Note: 'pthread' is in libc for android. On other platform, if use
	# new gcc(>4.9?) it isn't required, otherwise, it's required
	if target_os != 'android':
		cert_examples_env.AppendUnique(LIBS = ['pthread','dl'])

cert_examples_env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
cert_examples_env.AppendUnique(RPATH = [env.get('BUILD_DIR')])
cert_examples_env.AppendUnique(LIBS = ['CKManager', 'asn1', 'tinydtls'])

if target_os == 'android':
	cert_examples_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
	cert_examples_env.AppendUnique(LIBS = ['gnustl_shared'])

	if not env.get('RELEASE'):
		cert_examples_env.AppendUnique(LIBS = ['log'])

if target_os in ['darwin', 'ios']:
	cert_examples_env.AppendUnique(CPPDEFINES = ['_DARWIN_C_SOURCE'])

######################################################################
# Source files and Targets
######################################################################
cert_src = Glob('*.cpp')
certclient = cert_examples_env.Program('certclient', cert_src)

Alias("examples", [certclient])
env.AppendTarget('examples')
