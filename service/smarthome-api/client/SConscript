#******************************************************************
#
# Copyright 2017 Samsung Electronics All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

######################################################################
# Smart Home API Client-side build script
######################################################################
Import('env');
smarthome_env = env.Clone()
target_os = smarthome_env.get('TARGET_OS')

smarthome_env.AppendUnique(CPPPATH = [
        '../../../resource/csdk/include/',
        '../../../resource/csdk/stack/include',
        '../../../resource/c_common/ocrandom/include',
        '../../../resource/csdk/logger/include',
        '../../../resource/csdk/security/include',
        '../../../resource/csdk/connectivity/api',
        ])

smarthome_env.AppendUnique(LIBPATH = [smarthome_env.get('BUILD_DIR')])
smarthome_env.AppendUnique(RPATH = [smarthome_env.get('BUILD_DIR')])
smarthome_env.PrependUnique(LIBS = ['coap'])
smarthome_env.AppendUnique(LIBS = ['connectivity_abstraction'])
smarthome_env.AppendUnique(LIBS = ['oc_logger'])
smarthome_env.AppendUnique(LIBS = ['octbstack'])

if 'g++' in smarthome_env.get('CXX'):
    smarthome_env.AppendUnique(CXXFLAGS = ['-Wall'])
    smarthome_env.AppendUnique(CXXFLAGS = ['-fPIC'])

discovery_dir = './discovery/'
device_dir = './device/'
resource_dir = './resource/'
common_dir = '../common/'

smarthome_env.AppendUnique(CPPPATH= [discovery_dir+'include',
        device_dir+'include',
        device_dir+'internal',
        resource_dir+'include',
        resource_dir+'internal',
        common_dir+'include',
        common_dir+'internal'])

smarthome_client_src = [discovery_dir+'src/DeviceDiscovery.cpp',
                    discovery_dir+'src/DiscoveryQuery.cpp',
                    resource_dir+'src/SHBaseRemoteResource.cpp',
                    resource_dir+'src/SHBaseRemoteResource_Impl.cpp',
                    resource_dir+'src/SHBaseRemoteResourceBuilder.cpp',
                    resource_dir+'src/RemoteBinarySwitchResource.cpp',
                    resource_dir+'src/RemoteModeResource.cpp',
                    resource_dir+'src/RemoteLockStatusResource.cpp',
                    resource_dir+'src/ClientCallbackContext.cpp',
                    resource_dir+'src/ClientCallbackWrapper.cpp',
                    resource_dir+'src/RemoteOpenLevelResource.cpp',
                    resource_dir+'src/RemoteAudioResource.cpp',
                    resource_dir+'src/RemoteMediaSourceResource.cpp',
                    resource_dir+'src/RemoteMediaSourceInputResource.cpp',
                    resource_dir+'src/RemoteMediaSourceOutputResource.cpp',
                    resource_dir+'src/RemoteMediaResource.cpp',
                    resource_dir+'src/RemoteOperationalStateResource.cpp',
                    resource_dir+'src/RemoteAutomaticDocumentFeederResource.cpp',
                    resource_dir+'src/RemoteTemperatureResource.cpp',
                    device_dir+'src/SHBaseRemoteDevice.cpp',
                    device_dir+'src/SHBaseRemoteDevice_Impl.cpp',
                    device_dir+'src/SHBaseRemoteDeviceBuilder.cpp',
                    device_dir+'src/RemoteLightDevice.cpp',
                    device_dir+'src/RemoteRobotCleanerDevice.cpp',
                    device_dir+'src/RemoteDryerDevice.cpp',
                    device_dir+'src/RemoteSmartLockDevice.cpp',
                    device_dir+'src/RemoteWaterValveDevice.cpp',
                    device_dir+'src/RemoteBlindDevice.cpp',
                    device_dir+'src/RemoteReceiverDevice.cpp',
                    device_dir+'src/RemoteTelevisionDevice.cpp',
                    device_dir+'src/RemoteCameraDevice.cpp',
                    device_dir+'src/RemotePrinterDevice.cpp',
                    device_dir+'src/RemoteScannerDevice.cpp',
                    device_dir+'src/RemoteSmartPlugDevice.cpp',
                    device_dir+'src/RemoteSecurityPanelDevice.cpp',
                    device_dir+'src/RemoteAirConditionerDevice.cpp',
                    device_dir+'src/RemoteThermostatDevice.cpp',
                    device_dir+'src/RemoteOvenDevice.cpp',
                    device_dir+'src/RemoteAirPurifierDevice.cpp',
                    device_dir+'src/RemoteFanDevice.cpp',
                    device_dir+'src/RemoteRefrigeratorDevice.cpp']

smarthomelib = smarthome_env.SharedLibrary('smarthome_client_api', smarthome_client_src)

smarthome_env.InstallTarget(smarthomelib, 'smarthome_client_api')
