
Build Instructions for Android-API:


1.Download the latest android SDK and android NDK (r10d or above) and install


2.Verify that you have the latest JDK (you might need to set the JDK_HOME variable)


3.Clone the latest iotivity codebase.


4.set environment variables:


a.export ANDROID_NDK_HOME=<path to Android NDK>

b. export ANDROID_NDK=$ANDROID_NDK_HOME

c.export ANDROID_HOME=<path to Android SDK>

d.export PATH =<path to NDK>/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86_64/bin:$PATH

e.platform=android

f.You might need to install openjdk if it doesn’t exist

sudo apt-get install openjdk-7-jdk

g.If running in windows, change the following line in the build.gradle file (./android/android_api/base/build.gradle):

def ndkBuild = new File(System.env.ANDROID_NDK_HOME, 'ndk-build')

to

def ndkBuild = new File(System.env.ANDROID_NDK_HOME, 'ndk-build.cmd’')


5.Build scons for android and your targeted architecture (This will also build android_api):


a.scons TARGET_OS=android TARGET_ARCH=<target arch> RELEASE=1


           where <target arch> can be armeabi, armeabi-v7a, x86 etc.

           Note: To build in debug mode, use RELEASE=0

b. If this is the first time building the scons script, you might be prompted to install ‘cereal’. Follow the instructions to do so and re-run the above scons command.

c. If gradle fails, ensure that you are running gradle 2.2.1 or above. Also, check your firewall settings if you see a connection timed out exception.

d. If the project is setup correctly, you should see a BUILD SUCCESSFUL’ message on the terminal

e. You should see the .aar files generated inside base/build/outputs/aar directory. The .aar files contain jni directory and also a .jar file

6. Verify that ‘out’ directory exists under project root. This should contain ‘android’ directory.


TO RUN UNIT TESTS IN ANDROID-API

7.The ‘androidTest’ directory contains sample test app (SmokeTest.java) which can be used to get an idea about API usage.


TO USE THE .AAR FILE IN A DIFFERENT PROJECT

8. Verify that 6 different *.so files exist inside android/android-api/base/libs/<TARGET_ARCH> directory.

9.Import the .aar file in your project to use it 


(you might need to add the following to the build.gradle file to provide the right .aar file name in dependencies)

    dependencies {       

    compile 'com.android.support:appcompat-v7:21.0.3'

        compile project(':base-armv7-release') // might need to change this name

    }



