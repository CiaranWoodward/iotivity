#******************************************************************
#
# Copyright 2017 Samsung Electronics All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

import os, sys

Import('env')

lws_env = env.Clone()
src_dir = lws_env.get('SRC_DIR')
lws_dir = os.path.join(src_dir, 'extlibs', 'libwebsockets', 'libwebsockets')
target_os = env.get('TARGET_OS')
target_arch = env.get('TARGET_ARCH')

# OpenSSL library
if ((env.get('SECURED') == '1') and (target_os == 'android')):
	SConscript('#extlibs/openssl/SConscript')

if GetOption('clean'):
	print "Initiating lws library build clean"
	build_dir = os.path.join(lws_dir, 'build')
	print "Build dir: %s" %build_dir
	if os.path.exists(build_dir):
		result = os.system('rm -rf %s' %build_dir)
		if result != 0:
			print 'Failed to remove libwebsockets build directory'
	Return('env')

######################################################################
# Download libwebsockets
######################################################################
# NOTE: Patch (bd1b017d1006ad583bc0ef2d10bdf83d5da98c5d) for allowing
# user to provide certificates without using filepaths is required to
# build ws adapter code for creating secure server context. This patch
# has been merged to libwebsockets upstream master branch, but we are
# using v2.2.1 tagged code base. Thus v2.2.1 is forked to new branch
# applied required patch and using the same forked libwebsockets repo.
# Please change to upstream libwebsockets repo when updating to libwebsockets
# 2.4 version.
lws_version          = 'v2.2.1_Iotivity'
lws_repo_url         = 'https://github.com/HarishSRIB/libwebsockets.git'
lws_checkout_command = 'git clone ' + lws_repo_url + ' extlibs/libwebsockets/libwebsockets -b ' + lws_version

if not os.path.exists(lws_dir):
	print '''
*********************************** Error: ****************************************
* Please download libwebsockets library using the following command:
*     $ %s\n
* Other dependencies:
*     Install CMake 3.1.0 or higher for building libwebsockets.
***********************************************************************************
''' % lws_checkout_command
        Exit(1)

# Export Android NDK environment variables
if target_os == 'android':
	android_ndk_path = os.path.join(src_dir, 'extlibs', 'android', 'ndk', 'android-ndk-r10e')
	if not os.path.exists(android_ndk_path):
		print '''
*********************************** Error: ****************************************
* Android NDK doesn't exist at the following path:
*     %s\n
***********************************************************************************
''' % android_ndk_path
		Exit(1)

	# Export TARGET_ARM_ARCH
	os.environ['TARGET_ARM_ARCH'] = target_arch

	if target_arch == 'x86':
		toolchain = 'x86-'
	elif target_arch == 'x86_64':
		toolchain = 'x86_64-'
	elif target_arch == 'arm64-v8a':
		toolchain = 'aarch64-linux-android-'
	else:
		toolchain = 'arm-linux-androideabi-'

	# Android ndk early version doesn't support C++11. Detect the toolchain version
	# to make sure proper toolchain is used
	for tc_ver in ['4.7', '4.8', '4.9', '']:
		if os.path.exists(os.path.join(android_ndk_path, 'toolchains', toolchain + tc_ver)):
			break

	if tc_ver == '':
		print '''
*************************************** Warning *******************************
*   To support C++11, the toolchain should be >= 4.7, please make sure your   *
* android NDK is at least r8e!                                                *
*******************************************************************************
'''
		Exit(1)

	# Export ANDROID_NDK_TOOLCHAIN_VERSION
	os.environ['ANDROID_NDK_TOOLCHAIN_VERSION'] = tc_ver

	android_ndk_path = os.path.realpath(android_ndk_path)
	android_ndk_toolchain_path = os.path.join(android_ndk_path, 'toolchains', toolchain + tc_ver, 'prebuilt')
	for os_ver in ['linux-x86', 'linux-x86_64', '']:
		if os.path.exists(os.path.join(android_ndk_toolchain_path, os_ver)):
			break

	if os_ver == '':
		print '''
*************************************** Warning *******************************
*   Prebuilt toolchain versions linux-x86/linux-x86_64 don't exist.           *
*******************************************************************************
'''
		Exit(1)

	android_ndk_toolchain_path = os.path.join(android_ndk_toolchain_path, os_ver)
	android_ndk_toolchain_path = os.path.realpath(android_ndk_toolchain_path)
	print 'Android NDK Toolchain Path: %s' % android_ndk_toolchain_path

	# Export ANDROID_NDK_PATH
	os.environ['ANDROID_NDK_PATH'] = android_ndk_path

	result = os.system('export ANDROID_NDK_PATH=%s' % android_ndk_path)
	if result != 0:
		print 'Exporting ANDROID_NDK_PATH failed'
		Exit(1)

	# Export ANDROID_NDK_TOOLCHAIN_PATH
	os.environ['ANDROID_NDK_TOOLCHAIN_PATH'] = android_ndk_toolchain_path

	result = os.system('export ANDROID_NDK_TOOLCHAIN_PATH=%s' % android_ndk_toolchain_path)
	if result != 0:
		print 'Exporting ANDROID_NDK_TOOLCHAIN_PATH failed'
		Exit(1)

######################################################################
# Build and Install
######################################################################

secured = 0
release = 0
target_os_id = 0

if env.get('SECURED') == '1':
	secured = 1

if env.get('RELEASE'):
	release = 1

if target_os == 'android':
	target_os_id = 1

if target_os in ('android','linux'):
    command = 'sh lws_build.sh %d %d %d' % (secured, release, target_os_id)
    result = os.system(command)
    if result != 0:
        print 'libwebsockets library build failed'
        Exit(1)
