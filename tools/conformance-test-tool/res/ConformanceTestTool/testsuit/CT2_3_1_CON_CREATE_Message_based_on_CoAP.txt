*** Settings ***
Documentation     CT2.3.1 CON CREATE Message based on CoAP
Resource          OIC_ConformanceTest_Setting.txt

*** Test Cases ***
CT2.3.1 CON CREATE Message based on CoAP
    [Documentation]    |author |jisan.m@samsung.com |
    ...    |reviewer| |
    ...    |since |2015-06-16|
    ...    |see |Section 8.1: CREATE|
    ...    |objective |Verify that the client (DUT) properly sends a CON CREATE request message to server (TE) |
    ...    |target | |
    ...    |test_data| |
    ...    |pre_condition|Server (TE) is discovered from the Client (DUT) |
    ...    |procedure| 1. From Client DUT, Send a CON (high QoS) CREATE request message with a complete URI to server|
    ...    |procedure| 2. From Server TE, Reply with a CREATE response message to client|
    ...    |procedure| 3. From Client DUT, Receives CREATE response message from server and returns an Ack |
    ...    |post_condition| |
    ...    |expected| 1. Verify Client sends the request message including below|
    ...    |expected| In OIC Layer|
    ...    |expected| - fr, to, ri, cn, op|
    ...    |expected| - op = CREATE|
    ...    |expected| - cn include the URI and resource type property of the resource to be created. |
    ...    |expected| In CoAP Layer|
    ...    |expected| - Type = 0 (CON)|
    ...    |expected| - Code = 3 (PUT)|
    ...    |expected| The payload of this PUT includes the initial state of the resource.|
    ...    |expected| 2. Check acknowledgement message on server|

    [Tags]    Mandantory    Client    Create    Con
    #Pre-Condition
    ####################################################
    Start Server
    ConformanceKeyword.Log To Console    \n-----------------Send Multicast Discovery Request from DUT App-----------------
    Get Discovery Requests
    #Test-Body
    #####################################################
    ConformanceKeyword.Log To Console    \n-----------------Send CON CREATE Request from DUT App-----------------
    ${request}    Get Request

    ${request_code}    Get Request Code     ${request}
    Should Be Equal    ${request_code}    ${PUT}
    ${request_type}    Get Request Type    ${request}
    Should Be Equal    ${request_type}    ${CON}
    ${payload}    Get Request Json	${request}
    ${validate_json_result}     Validate JSON Format        ${payload} 
    Should Be True      ${validate_json_result}
    ${href}    Get JSON Value    ${HREF}    ${payload}
    Should Not be Empty    ${href}
    ${resource_type}    Get JSON Value    ${RESOURCE_TYPE}     ${payload}
    Should Not be Empty	   ${resource_type}   
    Stop Server
