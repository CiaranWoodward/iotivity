*** Settings ***
Documentation	CT1.7.6 Finish ownership transfer
Resource	OIC_ConformanceTest_Setting.txt
Test Setup    Start Capture
Test TearDown    End Capture

*** Test Cases ***
CT1.7.5.6 Finish ownership transfer
    [Documentation]					
	...	|author	| |	
	...	|reviewer|	|			
	...	|since	|2015-10-09 |
	...	|see	|Security Spec Section 7.3 Device Ownership Transfer Methods |
	...	|objective	|Verify the Server (DUT) change the owned status of ‘doxm' resource to ‘TRUE’.   |
	...	|target	|Server DUT |
	...	|test_data| “/oic/sec/doxm.owned” == “True”  |
	...	|test_configuration | None |
	...	|pre_condition|Any one of three method is successfully finished. |
	...	|pre_condition|    Option 1) Just-Works:: CT1.7.5.1 is successfully finished. |
	...	|pre_condition|    Option 2) Random Pin based: CT1.7.5.2 is successfully finished |
	...	|pre_condition|    Option 3) Manufacturer Certificate Based: CT1.7.2.3 is successfully finished. |
	...	|procedure| 1. Test Application initiates a PUT request to /oic/sec/doxm resource in Server (DUT) to change ‘Owned’ property and ‘Owner’ |	
	...	|procedure| 2. DUT sends response of PUT req. to doxm |
	...	|post_condition|None |
	...	|expected| 1. Client (TE) get RSP 2.04  |
	...	|expected| 2. Server (DUT) “/oic/sec/doxm.owned” == “True” |
	...	|expected| 3. Server (DUT) “/oic/sec/doxm.DevOwner” == Device ID of the Client (TE) |

    [Tags]	Mandatory	Security
    
    #Precondition
#    ${server_type}	Wait For User Confirmation	Please Select Server Type	${JUST_WORKS_SERVER} ${RANDOM_PIN_SERVER}
    
#    Initialize Device Controller	${DEVICE_ID}
#    Change Working Directory	${DTLS_RELAY_DIR}
#    Execute Application	${DTLS_RELAY_PROCESS_ID}	${DTLS_RELAY}
    Start Application Log	${DEVICE_ID}	${DTLS_RELAY_PROCESS_ID}
    Sleep	2 seconds
    ${app_log}	Get Application Log	${DEVICE_ID}	${DTLS_RELAY_PROCESS_ID}
    Should Contain	${app_log}	Staring Dtls Relay
    Should Not Contain	${app_log}	data address bind failed
    
    #Main Body
    Run Keyword if	'${server_type}' == '${JUST_WORKS_SERVER}'	Transfer Ownership Using Just Works Method
    ...	ELSE IF	'${server_type}' == '${RANDOM_PIN_SERVER}'	Transfer Ownership Using Random Pin Method
    ...	ELSE	Should be True	False
    
    Terminate Dtls Connection
    Terminate Application	${DTLS_RELAY_PROCESS_ID}
    
    ${transfer_response}    Transfer Ownership    ${SERVER_IP}
    
    
*** Keywords ***
Transfer Ownership Using Just Works Method
	${dut_response}	Get Multicast Discovery Request List	${COAP}	${OIC_CORE_PROVISION_URI}	${PROVISION_QUERY_UNOWNED}
    
    ${dut_response_code}	${resource_ip}	${resource_port}	${response_payload}	Get Response Code IP Port And Payload From Response	${dut_response}
	Should Be Equal         ${COAP_RESPONSE_CODE_SUCCESS}   ${dut_response_code}
	${payload}	Get Payload From File	${PAYLOAD_OXMSEL_JUST_WORKS}	${PAYLOAD_FILE_DIR}
	
	${message_id}	Generate Message Id
	${token}	Generate Token
	${dut_put_response}        Send Put Request        ${UNICAST}      ${COAP} 	${message_id}	${token}	${resource_ip}	  ${${resource_port}}	${OIC_CORE_PROVISION_URI}	${CONFIRMABLE}	${payload}	${PAYLOAD_TYPE_SECURITY}
	Should Not Be Empty             ${dut_put_response}
	${dut_put_response_code}	Get Response Code	${dut_put_response}
	Should Be Equal	${COAP_RESPONSE_CODE_UPDATED}	${dut_put_response_code}
	
	${dut_get_response}        Send Get Request        ${UNICAST}      ${COAP} 	${message_id}	${token}	${resource_ip}	  ${${resource_port}}	${OIC_CORE_PROVISION_PSTAT}	${CONFIRMABLE}
	Should Not Be Empty             ${dut_get_response}
	${dut_get_response_code}   Get Response Code       ${dut_get_response}
	Should Be Equal         ${COAP_RESPONSE_CODE_SUCCESS}   ${dut_get_response_code}
	
	${payload}	Get Payload From File	${PAYLOAD_PSTAT_PROVISIONING_MODE}	${PAYLOAD_FILE_DIR}
	
	${dut_put_response}        Send Put Request        ${UNICAST}      ${COAP} 	${message_id}	${token}	${resource_ip}	  ${${resource_port}}	${OIC_CORE_PROVISION_PSTAT}	${CONFIRMABLE}	${payload}	${PAYLOAD_TYPE_SECURITY}
	Should Not Be Empty             ${dut_put_response}
	${dut_put_response_code}	Get Response Code	${dut_put_response}
	
	${secured_port}	Get Secured Port	${resource_ip}	${${resource_port}}
	
	Intialize Dtls Connection	${DTLS_RELAY_IP}	${DTLS_COMMAND_PORT}	${resource_ip}	${secured_port}	${TLS_ECDH_anon_WITH_AES_128_CBC_SHA_256}
	
	${payload}	Get Payload From File	payload_owner	${PAYLOAD_FILE_DIR}
	
	${dut_put_response}        Send Put Request        ${UNICAST}      ${COAP} 	${message_id}	${token}	${DTLS_RELAY_IP}	  ${DTLS_DATA_PORT}	${OIC_CORE_PROVISION_URI}	${CONFIRMABLE}	${payload}	${PAYLOAD_TYPE_SECURITY}
	Should Not Be Empty             ${dut_put_response}
	${dut_put_response_code}	Get Response Code	${dut_put_response}
	Should Be Equal	${COAP_RESPONSE_CODE_UPDATED}	${dut_put_response_code}
	
Transfer Ownership Using Random Pin Method
	${dut_response}	Get Multicast Discovery Request List	${COAP}	${OIC_CORE_PROVISION_URI}	${PROVISION_QUERY_UNOWNED}
    
    ${dut_response_code}	${resource_ip}	${resource_port}	${response_payload}	Get Response Code IP Port And Payload From Response	${dut_response}
	Should Be Equal         ${COAP_RESPONSE_CODE_SUCCESS}   ${dut_response_code}
	${payload}	Get Payload From File	payload_oxmsel_random	${PAYLOAD_FILE_DIR}
	
	${message_id}	Generate Message Id
	${token}	Generate Token
	${dut_put_response}        Send Put Request        ${UNICAST}      ${COAP} 	${message_id}	${token}	${resource_ip}	  ${${resource_port}}	${OIC_CORE_PROVISION_URI}	${CONFIRMABLE}	${payload}	${PAYLOAD_TYPE_SECURITY}
	Should Not Be Empty             ${dut_put_response}
	${dut_put_response_code}	Get Response Code	${dut_put_response}
	Should Be Equal	${COAP_RESPONSE_CODE_UPDATED}	${dut_put_response_code}
	
	${dut_get_response}        Send Get Request        ${UNICAST}      ${COAP} 	${message_id}	${token}	${resource_ip}	  ${${resource_port}}	${OIC_CORE_PROVISION_PSTAT}	${CONFIRMABLE}
	Should Not Be Empty             ${dut_get_response}
	${dut_get_response_code}   Get Response Code       ${dut_get_response}
	Should Be Equal         ${COAP_RESPONSE_CODE_SUCCESS}   ${dut_get_response_code}
	
	${payload}	Get Payload From File	payload_pstat_random	${PAYLOAD_FILE_DIR}
	
	${dut_put_response}        Send Put Request        ${UNICAST}      ${COAP} 	${message_id}	${token}	${resource_ip}	  ${${resource_port}}	${OIC_CORE_PROVISION_PSTAT}	${CONFIRMABLE}	${payload}	${PAYLOAD_TYPE_SECURITY}
	Should Not Be Empty             ${dut_put_response}
	${dut_put_response_code}	Get Response Code	${dut_put_response}
	
	${secured_port}	Get Secured Port	${resource_ip}	${${resource_port}}
	
	${current_time}	Get Current Date
    ConformanceKeyword.Log To Console	Initializing DTLS Handshake for Just Works at ${current_time} ...
	
	${client_di}	Set Variable	adminDeviceUUID0
	${server_di}	Set Variable	randomPinDevUUIDadminDeviceUUID0
	${random_pin}	Wait For User Confirmation	INPUT PIN
	
	${is_successful}	Intialize Dtls Connection With Random Pin	${DTLS_RELAY_IP}	${DTLS_COMMAND_PORT}	${resource_ip}	${secured_port}	${TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA_256}	${client_di}	${server_di}	${random_pin}
    Should be True	${is_successful}
    
    ${current_time}	Get Current Date
    ConformanceKeyword.Log To Console	Finishing DTLS Handshake for Just Works at ${current_time} ...
    
    
    ${payload}	Get Payload From File	payload_owner	${PAYLOAD_FILE_DIR}
	
	${dut_put_response}        Send Put Request        ${UNICAST}      ${COAP} 	${message_id}	${token}	${DTLS_RELAY_IP}	  ${DTLS_DATA_PORT}	${OIC_CORE_PROVISION_URI}	${CONFIRMABLE}	${payload}	${PAYLOAD_TYPE_SECURITY}
	Should Not Be Empty             ${dut_put_response}
	${dut_put_response_code}	Get Response Code	${dut_put_response}
	Should Be Equal	${COAP_RESPONSE_CODE_UPDATED}	${dut_put_response_code}