*** Settings ***
Documentation	CT2.3.7 Complete CON UPDATE Message based on CoAP 
Resource          OIC_ConformanceTest_Setting.txt

*** Test Cases ***
CT2.3.7 Complete CON UPDATE Message based on CoAP
    [Documentation]					
	...	|author	| |	
	...	|reviewer|	|			
	...	|since	|2015-06-16|
	...	|see	|Section 8.3: UPDATE|
	...	|objective	|Verify that the client (DUT) properly sends a complete CON UPDATE request message to server (TE)  |
	...	|target	|	|
	...	|test_data|	|
	...	|pre_condition|Server (TE) is discovered from the Client (DUT) |
	...	|procedure| 1. From Client DUT, Send a CON (high QoS) UPDATE request message to server|	
	...	|procedure| 2. From Server TE, Reply with a UPDATE response message to client|
	...	|procedure| 3. From Client DUT, Receives UPDATE response message from server and returns an Ack |
	...	|post_condition| |
	...	|expected| 1. Verify Client sends the request message including below|
	...	|expected|    In OIC Layer|
	...	|expected|       - fr, to, ri, cn, op|
	...	|expected|       - op = UPDATE|
	...	|expected|       - cn = Information, including properties, of the resource to be updated |
	...	|expected|    In CoAP Layer|
	...	|expected|       - Type = 0 (CON)|
	...	|expected|       - Code = 3 (PUT)|
	...	|expected| 2. Check acknowledgement message on server|

    [Tags]    Mandatory    Client    Update    Con
    #Pre-Condition
    ####################################################
    Start Server
    ConformanceKeyword.Log To Console    \n-----------------Send Multicast Discovery Request from DUT App-----------------
    Get Discovery Requests 
    #Test-Body
    #####################################################
    ConformanceKeyword.Log To Console    \n-----------------Send Complete CON UPDATE Message based on CoAP from DUT App-----------------
    ${request}    Get Request
    ${request_code}    Get Request Code    ${request}
    Should Be Equal    ${request_code}    ${PUT}
    ${request_type}    Get Request Type    ${request}
    Should Be Equal    ${request_type}    ${CON}
    ${payload}    Get Request Json	${request}
    ${validate_json_result}     Validate JSON Format        ${payload} 
    Should Be True      ${validate_json_result}
    ${representation}    Get JSON Value    ${REPRESENTATION}    ${payload}
    Should Not Be Empty    ${representation}    
    Stop Server
