*** Settings ***
Documentation	CT1.7.7 Post ACL
Resource	OIC_ConformanceTest_Setting.txt
Test Setup    Start Capture
Test TearDown    End Capture

*** Test Cases ***
CT1.7.7 Post ACL
    [Documentation]					
	...	|author	| |	
	...	|reviewer|	|			
	...	|since	|2015-10-09 |
	...	|see	|Security Spec Section 10. Message Integrity and Confidentiality |
	...	|objective	|Verify the Server (DUT) can accept DTLS session with OwnerPSK and accept ACL provisioning request from the  |
	...	|objective	|Client (TE) with guaranteed message Integrity and Confidentiality. |
	...	|target	|Server DUT |
	...	|test_data| ACL |
	...	|test_configuration | Server (DUT) and Client (TE) has a pair-wise symmetric credential between them. |
	...	|pre_condition| CT1.7.6 is successfully finished |
	...	|procedure| 1. Test Application initiates a secure POST request to "/oic/sec/acl" resource in Server (DUT) to set access control policy |	
	...	|procedure| 2. DUT sends response of POST req. to ACL |
	...	|post_condition|None |
	...	|expected| 1. Secure session establishment (DTLS) between the Server (DUT) and the Client (TE).  |
	...	|expected| 2. Comparing the added ACL resource of the Server (DUT) to the ACL data of the Client (TE) and check these two are the same. |

    [Tags]	Mandatory	Security
    #Precondition
    ${server_type}	Wait For User Confirmation	Please Select Server Type	${JUST_WORKS_SERVER} ${RANDOM_PIN_SERVER}
    ${SECURITY_CLIENT_DIR}	Get Security Client Simulator Directory
    Initialize Device Controller	${DEVICE_ID}
    Change Working Directory	${SECURITY_CLIENT_DIR}
    Execute Application	${SECURITY_CLIENT_PROCESS_ID}	${SECURITY_CLIENT}
    ConformanceKeyword.Log to Console	Starting Security Provisioning Client ...
    Start Application Log	${DEVICE_ID}	${SECURITY_CLIENT_PROCESS_ID}
    Sleep	5 seconds
    
    Transfer Ownership	${server_type}
    
    #Main Body
    ConformanceKeyword.Log to Console	Discovering Owned Devices ...
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_DISCOVERY_OWNED_DEVICE}
    Sleep	5 seconds
    ${current_time}	Get Current Date
    Print Message	Starting ACL Provisioning at ${current_time}...
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_PROVISIONING_ACL}
    Sleep	2 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_DEVICE_SELECTION}
    Sleep	2 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${SUBJECT}
    Sleep	2 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_RESOURCE_COUNT}
    Sleep	2 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${RESOURCE_URI}
    Sleep	2 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${PERMISSION}
    Sleep	2 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_OWNER_COUNT}
    Sleep	2 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${RESOURCE_OWNER}
    Sleep	2 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_CLOSE_SECURITY_CLIENT}
    ${app_log}	Get Application Log	${DEVICE_ID}	${SECURITY_CLIENT_PROCESS_ID}
    Should Contain	${app_log}	${PROVISIONING_SUCCESS_MESSAGE}
    ConformanceKeyword.Log to Console	${app_log}
    
    Print Message	Please Verify the Resource has a new ACL with Subject= ${SUBJECT}, Resource= ${RESOURCE_URI}, Permission= ${PERMISSION} and Owner= ${RESOURCE_OWNER}


*** Keywords ***

Transfer Ownership
    [Arguments]     ${server_type}
    ConformanceKeyword.Log to Console	Discovering Unowned Devices ...
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_DISCOVERY_UNOWNED_DEVICE}
    Sleep	5 seconds
    ${current_time}	Get Current Date
    ConformanceKeyword.Log to Console	Transferring Ownership at ${current_time} ...
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_OWNER_TRANSFER}
    Sleep	3 seconds
    Input Command To Application	${SECURITY_CLIENT_PROCESS_ID}	${INPUT_DEVICE_SELECTION}
    
    Run Keyword if	'${server_type}' == '${RANDOM_PIN_SERVER}'	Take Random Pin From User	${SECURITY_CLIENT_PROCESS_ID}    
    Sleep	5 seconds
